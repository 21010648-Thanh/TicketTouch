{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thanh\\\\tickettouch-frontend-new\\\\src\\\\components\\\\LoginForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginForm() {\n  _s();\n  const [form, setForm] = useState({\n    email: '',\n    password: ''\n  });\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch('http://localhost/tickettouch/public/api/login', {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(form)\n    }).then(res => res.json()).then(data => {\n      if (data.token) {\n        alert('üéâ ƒêƒÉng nh·∫≠p th√†nh c√¥ng!');\n        // L∆∞u token n·∫øu c·∫ßn: localStorage.setItem('token', data.token);\n      } else {\n        alert('‚ùå ƒêƒÉng nh·∫≠p th·∫•t b·∫°i!');\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"login-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDD10 \\u0110\\u0103ng nh\\u1EADp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"email\",\n      type: \"email\",\n      placeholder: \"Email\",\n      value: form.email,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"M\\u1EADt kh\\u1EA9u\",\n      value: form.password,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"\\u0110\\u0103ng nh\\u1EADp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginForm, \"YN82mk+BAqI6iccZJp7HrBuCAaU=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LoginForm","_s","form","setForm","email","password","handleChange","e","target","name","value","handleSubmit","preventDefault","fetch","method","credentials","headers","body","JSON","stringify","then","res","json","data","token","alert","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/thanh/tickettouch-frontend-new/src/components/LoginForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction LoginForm() {\r\n  const [form, setForm] = useState({ email: '', password: '' });\r\n\r\n  const handleChange = e => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    fetch('http://localhost/tickettouch/public/api/login', {\r\n      method: 'POST',\r\n      credentials: 'include',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(form)\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (data.token) {\r\n          alert('üéâ ƒêƒÉng nh·∫≠p th√†nh c√¥ng!');\r\n          // L∆∞u token n·∫øu c·∫ßn: localStorage.setItem('token', data.token);\r\n        } else {\r\n          alert('‚ùå ƒêƒÉng nh·∫≠p th·∫•t b·∫°i!');\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"login-form\">\r\n      <h2>üîê ƒêƒÉng nh·∫≠p</h2>\r\n      <input name=\"email\" type=\"email\" placeholder=\"Email\" value={form.email} onChange={handleChange} required />\r\n      <input name=\"password\" type=\"password\" placeholder=\"M·∫≠t kh·∫©u\" value={form.password} onChange={handleChange} required />\r\n      <button type=\"submit\">ƒêƒÉng nh·∫≠p</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default LoginForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC;IAAEO,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EAE7D,MAAMC,YAAY,GAAGC,CAAC,IAAI;IACxBJ,OAAO,CAAC;MAAE,GAAGD,IAAI;MAAE,CAACK,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAAM,CAAC,CAAC;EACvD,CAAC;EAED,MAAMC,YAAY,GAAGJ,CAAC,IAAI;IACxBA,CAAC,CAACK,cAAc,CAAC,CAAC;IAElBC,KAAK,CAAC,+CAA+C,EAAE;MACrDC,MAAM,EAAE,MAAM;MACdC,WAAW,EAAE,SAAS;MACtBC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACjB,IAAI;IAC3B,CAAC,CAAC,CACCkB,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;MACZ,IAAIA,IAAI,CAACC,KAAK,EAAE;QACdC,KAAK,CAAC,0BAA0B,CAAC;QACjC;MACF,CAAC,MAAM;QACLA,KAAK,CAAC,uBAAuB,CAAC;MAChC;IACF,CAAC,CAAC;EACN,CAAC;EAED,oBACE1B,OAAA;IAAM2B,QAAQ,EAAEf,YAAa;IAACgB,SAAS,EAAC,YAAY;IAAAC,QAAA,gBAClD7B,OAAA;MAAA6B,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBjC,OAAA;MAAOU,IAAI,EAAC,OAAO;MAACwB,IAAI,EAAC,OAAO;MAACC,WAAW,EAAC,OAAO;MAACxB,KAAK,EAAER,IAAI,CAACE,KAAM;MAAC+B,QAAQ,EAAE7B,YAAa;MAAC8B,QAAQ;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3GjC,OAAA;MAAOU,IAAI,EAAC,UAAU;MAACwB,IAAI,EAAC,UAAU;MAACC,WAAW,EAAC,oBAAU;MAACxB,KAAK,EAAER,IAAI,CAACG,QAAS;MAAC8B,QAAQ,EAAE7B,YAAa;MAAC8B,QAAQ;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvHjC,OAAA;MAAQkC,IAAI,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEX;AAAC/B,EAAA,CAnCQD,SAAS;AAAAqC,EAAA,GAATrC,SAAS;AAqClB,eAAeA,SAAS;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}